- name: Set hostname in /etc/hostname file
  ansible.builtin.hostname:
    name: "{{ inventory_hostname }}"

- name: Check that the `hosts` file exists
  ansible.builtin.stat:
    path: /etc/hosts
  register: hostnames_stat_result

- name: Ensure that the `hosts` file exists
  ansible.builtin.file:
    path: /etc/hosts
    owner: root
    group: root
    mode: "0644"
    state: touch
  when: not hostnames_stat_result.stat.exists

- name: Ensure that the `hosts` file contains all localhost variables
  ansible.builtin.lineinfile:
    dest: /etc/hosts
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  loop:
    - { regexp: '^127.0.0.1', line: "127.0.0.1 localhost" }
    - { regexp: '^{{ ansible_host }}', line: '{{ ansible_host }} {{ inventory_hostname }}.{{ domain }} {{ inventory_hostname }}' }
    - { regexp: '^# The following lines', line: '# The following lines are desirable for IPv6 capable hosts' }
    - { regexp: '^::1', line: "::1\tlocalhost ip6-localhost ip6-loopback" }
    - { regexp: '^fe00::0', line: 'fe00::0 ip6-localnet' }
    - { regexp: '^ff00::0', line: 'ff00::0 ip6-mcastprefix' }
    - { regexp: '^ff02::1', line: 'ff02::1 ip6-allnodes' }
    - { regexp: '^ff02::2', line: 'ff02::2 ip6-allrouters' }
    - { regexp: '^ff02::3', line: 'ff02::3 ip6-allhosts' }

- name: Ensure that the `hosts` file contains all of our own servers ips
  ansible.builtin.lineinfile:
    dest: /etc/hosts
    regexp: "^{{ hostvars[item].ansible_host }} {{ item }}.{{ domain }} {{ item }}"
    line: "{{ hostvars[item].ansible_host }} {{ item }}.{{ domain }} {{ item }}"
  loop: "{{ groups['all'] }}"
